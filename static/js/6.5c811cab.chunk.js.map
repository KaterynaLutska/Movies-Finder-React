{"version":3,"sources":["components/MoviesList/MoviesList.module.css","components/MoviePreview/MoviePreview.module.css","components/MoviePreview/MoviePreview.jsx","components/MoviesList/MoviesList.jsx","views/MoviesPageViews/MoviesPageViews.module.css","views/MoviesPageViews/MoviesPageViews.jsx"],"names":["module","exports","MoviePreview","this","props","title","imgUrl","imgSrc","className","s","MoviePreviewThumb","moviePoster","alt","src","width","MoviePreviewTitle","Component","defaultProps","MoviesList","movies","map","el","to","routes","id","vote","vote_average","poster_path","key","MoviePageViews","state","query","hanldeChange","e","setState","currentTarget","value","handleSubmit","preventDefault","fetchMovie","Axios","get","then","response","data","results","SearchForm","onSubmit","SearchFormInput","type","autoComplete","autoFocus","placeholder","onChange","SearchFormButton","SearchFormButtonLabel"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,kBAAoB,wCAAwC,kBAAoB,0C,oKCK5FC,E,4JACJ,WAAU,IAAD,EACmBC,KAAKC,MAAvBC,EADD,EACCA,MAAOC,EADR,EACQA,OACTC,EAAM,0CAAsCD,EAAtC,oBALN,oCAON,OACE,sBAAKE,UAAWC,IAAEC,kBAAlB,UACE,qBACEF,UAAWC,IAAEE,YACbC,IAAKP,EACLQ,IAAgB,OAAXP,EAAkBC,EAASJ,KAAKC,MAAMG,OAC3CO,MAAM,UAER,oBAAIN,UAAWC,IAAEM,kBAAjB,SAAqCV,W,GAblBW,aAmBZd,IAEfA,EAAae,aAAe,CAC1BV,OACE,sFCtBJ,IAmBeW,EAnBI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,oBAAIX,UAAWC,IAAES,WAAjB,SACGC,EAAOC,KAAI,SAAAC,GAAE,OACZ,6BACE,cAAC,IAAD,CAAMC,GAAE,UAAKC,IAAOJ,OAAZ,YAAsBE,EAAGG,IAAjC,SACE,cAAC,EAAD,CACEA,GAAIH,EAAGG,GACPnB,MAAOgB,EAAGhB,MACVoB,KAAMJ,EAAGK,aACTpB,OAAQe,EAAGM,iBANRN,EAAGG,W,mBCVpBxB,EAAOC,QAAU,CAAC,WAAa,oCAAoC,iBAAmB,0CAA0C,sBAAwB,+CAA+C,gBAAkB,2C,2KCKrN2B,EAAM,mCAqDKC,E,4MAlDbC,MAAQ,CACNC,MAAO,GACPZ,OAAQ,I,EAGVa,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcC,S,EAGzCC,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,IAEVP,EAAU,EAAKD,MAAfC,MACR,EAAKG,SAAS,CAAEH,UAChB,EAAKQ,c,EAEPA,WAAa,WAAO,IACVR,EAAU,EAAKD,MAAfC,MACSS,IAAMC,IAAN,4DACsCb,EADtC,iCACkEG,EADlE,gCAEfW,MAAK,SAAAC,GACL,EAAKT,SAAS,CACZf,OAAQwB,EAASC,KAAKC,c,4CAK5B,WAAU,IACA1B,EAAWhB,KAAK2B,MAAhBX,OAER,OACE,gCACE,uBAAMX,UAAWC,IAAEqC,WAAYC,SAAU5C,KAAKkC,aAA9C,UACE,uBACE7B,UAAWC,IAAEuC,gBACbC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAAUlD,KAAK6B,eAEjB,wBAAQxB,UAAWC,IAAE6C,iBAAkBL,KAAK,SAA5C,SACE,sBAAMzC,UAAWC,IAAE8C,sBAAnB,yBAGJ,cAACrC,EAAA,EAAD,CAAYC,OAAQA,W,GA7CCH","file":"static/js/6.5c811cab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviesList\":\"MoviesList_MoviesList__1o2vk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviePreviewThumb\":\"MoviePreview_MoviePreviewThumb__1B5rC\",\"MoviePreviewTitle\":\"MoviePreview_MoviePreviewTitle__163w9\"};","import PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport s from './MoviePreview.module.css';\nlet key = '68bc44794965f90c41d1f35ad9bb144b';\n\nclass MoviePreview extends Component {\n  render() {\n    const { title, imgUrl } = this.props;\n    const imgSrc = `https://image.tmdb.org/t/p/w500/${imgUrl}?api_key=${key}`;\n\n    return (\n      <div className={s.MoviePreviewThumb}>\n        <img\n          className={s.moviePoster}\n          alt={title}\n          src={imgUrl !== null ? imgSrc : this.props.imgSrc}\n          width=\"200px\"\n        ></img>\n        <h2 className={s.MoviePreviewTitle}>{title}</h2>\n      </div>\n    );\n  }\n}\n\nexport default MoviePreview;\n\nMoviePreview.defaultProps = {\n  imgSrc:\n    'https://static.ukrinform.com/photos/2018_12/thumb_files/630_360_1546000648-830.jpg',\n};\n\nMoviePreview.propTypes = {\n  title: PropTypes.string,\n  imgUrl: PropTypes.string,\n};\n","import s from './MoviesList.module.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport routes from '../../routes';\nimport MoviePreview from '../MoviePreview';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul className={s.MoviesList}>\n      {movies.map(el => (\n        <li key={el.id}>\n          <Link to={`${routes.movies}/${el.id}`}>\n            <MoviePreview\n              id={el.id}\n              title={el.title}\n              vote={el.vote_average}\n              imgUrl={el.poster_path}\n            />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      vote: PropTypes.number,\n      imgUrl: PropTypes.string,\n    }),\n  ),\n  onClickModal: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"MoviesPageViews_SearchForm__1BWCl\",\"SearchFormButton\":\"MoviesPageViews_SearchFormButton__39GsE\",\"SearchFormButtonLabel\":\"MoviesPageViews_SearchFormButtonLabel__3jesz\",\"SearchFormInput\":\"MoviesPageViews_SearchFormInput__34a4A\"};","import { Component } from 'react';\nimport s from './MoviesPageViews.module.css';\n\nimport MoviesList from '../../components/MoviesList';\n\nimport Axios from 'axios';\nlet key = '68bc44794965f90c41d1f35ad9bb144b';\n\nclass MoviePageViews extends Component {\n  state = {\n    query: '',\n    movies: [],\n  };\n\n  hanldeChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { query } = this.state;\n    this.setState({ query });\n    this.fetchMovie();\n  };\n  fetchMovie = () => {\n    const { query } = this.state;\n    const response = Axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`,\n    ).then(response => {\n      this.setState({\n        movies: response.data.results,\n      });\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={this.hanldeChange}\n          ></input>\n          <button className={s.SearchFormButton} type=\"submit\">\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n        </form>\n        <MoviesList movies={movies} />\n      </div>\n    );\n  }\n}\n\nexport default MoviePageViews;\n"],"sourceRoot":""}