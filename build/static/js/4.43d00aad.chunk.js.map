{"version":3,"sources":["api/api.js","components/MoviesList/MoviesList.module.css","components/MoviePreview/MoviePreview.module.css","components/MoviePreview/MoviePreview.jsx","components/MoviesList/MoviesList.jsx","views/MoviesPage/MoviesPage.module.css","components/SearchForm/SearchForm.jsx","views/MoviesPage/MoviesPage.jsx"],"names":["baseUrl","key","api","getPopularMovie","a","Axios","get","then","res","data","results","response","fetchMovieByName","query","getMovieDetailPage","movieId","getCast","cast","getReviews","module","exports","MoviePreview","this","props","title","imgUrl","imgSrc","className","s","MoviePreviewThumb","moviePoster","alt","src","width","MoviePreviewTitle","Component","defaultProps","MoviesList","movies","location","console","log","map","el","to","pathname","id","state","from","vote","vote_average","poster_path","SearchForm","hanldeChange","e","preventDefault","setState","currentTarget","value","handleSubmit","onSubmit","SearchFormInput","type","autoComplete","autoFocus","placeholder","onChange","SearchFormButton","SearchFormButtonLabel","MoviePage","error","onChangeQuery","toLowerCase","history","push","search","fetchMovie","catch","prevProps","prevState","prevQuery","currentQuery"],"mappings":"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","file":"static/js/4.43d00aad.chunk.js","sourcesContent":["import Axios from 'axios';\nconst baseUrl = 'https://api.themoviedb.org/3/';\nconst key = '68bc44794965f90c41d1f35ad9bb144b';\n\nconst getPopularMovie = async () => {\n  const response = await Axios.get(\n    `${baseUrl}/trending/all/day?api_key=${key}`,\n  ).then(res => res.data.results);\n  return response;\n};\n\nconst fetchMovieByName = async query => {\n  const response = await Axios.get(\n    `${baseUrl}search/movie?query=${query}&api_key=${key}`,\n  ).then(res => {\n    return res.data.results;\n  });\n  return response;\n};\n\nconst getMovieDetailPage = async movieId => {\n  const response = await Axios.get(\n    `${baseUrl}movie/${movieId}?api_key=${key}&language=en-US`,\n  );\n  return response;\n};\n\nconst getCast = async movieId => {\n  const response = await Axios.get(\n    `${baseUrl}movie/${movieId}/credits?api_key=${key}`,\n  ).then(res => res.data.cast);\n  return response;\n};\n\nconst getReviews = async movieId => {\n  const response = await Axios.get(\n    `${baseUrl}movie/${movieId}/reviews?api_key=${key}`,\n  ).then(res => res.data.results);\n  return response;\n};\n\nconst api = {\n  getPopularMovie,\n  fetchMovieByName,\n  getMovieDetailPage,\n  getCast,\n  getReviews,\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviesList\":\"MoviesList_MoviesList__1o2vk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviePreviewThumb\":\"MoviePreview_MoviePreviewThumb__1B5rC\",\"MoviePreviewTitle\":\"MoviePreview_MoviePreviewTitle__163w9\"};","import PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport s from './MoviePreview.module.css';\n\nclass MoviePreview extends Component {\n  render() {\n    const { title, imgUrl } = this.props;\n    const imgSrc = `https://image.tmdb.org/t/p/w500/${imgUrl}`;\n\n    return (\n      <div className={s.MoviePreviewThumb}>\n        <img\n          className={s.moviePoster}\n          alt={title}\n          src={imgUrl !== null ? imgSrc : this.props.imgSrc}\n          width=\"200px\"\n        ></img>\n        <h2 className={s.MoviePreviewTitle}>{title}</h2>\n      </div>\n    );\n  }\n}\n\nexport default MoviePreview;\n\nMoviePreview.defaultProps = {\n  imgSrc:\n    'https://static.ukrinform.com/photos/2018_12/thumb_files/630_360_1546000648-830.jpg',\n};\n\nMoviePreview.propTypes = {\n  title: PropTypes.string,\n  imgUrl: PropTypes.string,\n};\n","import s from './MoviesList.module.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport MoviePreview from '../MoviePreview';\n\nconst MoviesList = ({ movies, location }) => {\n  console.log(location, 'movielist location');\n\n  return (\n    <ul className={s.MoviesList}>\n      {movies.map(el => (\n        <li key={el.id}>\n          <Link\n            to={{\n              pathname: `movies/${el.id}`,\n              state: { from: location },\n            }}\n          >\n            <MoviePreview\n              id={el.id}\n              title={el.title}\n              vote={el.vote_average}\n              imgUrl={el.poster_path}\n            />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      vote: PropTypes.number,\n      imgUrl: PropTypes.string,\n    }),\n  ),\n  onClickModal: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"MoviesPage_SearchForm__1P3up\",\"SearchFormButton\":\"MoviesPage_SearchFormButton__Cv4iQ\",\"SearchFormButtonLabel\":\"MoviesPage_SearchFormButtonLabel__1BayS\",\"SearchFormInput\":\"MoviesPage_SearchFormInput__1a-Sf\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from '../../views/MoviesPage/MoviesPage.module.css';\n\nclass SearchForm extends Component {\n  state = {\n    query: '',\n  };\n\n  hanldeChange = e => {\n    e.preventDefault();\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { query } = this.state;\n    this.props.onSubmit(query);\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={this.hanldeChange}\n          ></input>\n          <button className={s.SearchFormButton} type=\"submit\">\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { Component } from 'react';\nimport api from '../../api/api';\n\nimport MoviesList from '../../components/MoviesList';\nimport SearchForm from '../../components/SearchForm';\n\nclass MoviePage extends Component {\n  state = {\n    query: '',\n    movies: [],\n    error: null,\n  };\n\n  componentDidMount() {\n    //console.log(this.props.location.pathname, 'pathname');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = prevState;\n    const { query: currentQuery } = this.state;\n\n    if (prevQuery !== currentQuery) {\n      this.fetchMovie(currentQuery);\n    }\n  }\n\n  onChangeQuery = data => {\n    this.setState({\n      query: data.toLowerCase(),\n    });\n    this.props.history.push({\n      pathname: this.props.location.pathname,\n      search: `query=${data}`,\n    });\n  };\n\n  fetchMovie = () => {\n    const { query } = this.state;\n    api\n      .fetchMovieByName(query)\n      .then(movies => {\n        this.setState({ movies });\n        return movies;\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div>\n        <SearchForm onSubmit={this.onChangeQuery} />\n        <MoviesList movies={movies} />\n      </div>\n    );\n  }\n}\n\nexport default MoviePage;\n"],"sourceRoot":""}